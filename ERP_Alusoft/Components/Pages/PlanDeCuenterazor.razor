@page "/PlanDeCuenta"
@rendermode InteractiveServer

<PageTitle>Inicio</PageTitle>

<h1>
	Plan de cuentas <span>
		<button class="btn btn-info" @onclick="Crear" data-bs-toggle="modal" data-bs-target="#myModal">
			<i class="bi bi-plus-square"> Agrgear Cuenta</i>
		</button>
	</span>
</h1>
<br />


<div class="modal fade" id="myModal">
	<div class="modal-dialog">
		<div class="modal-content">

			<!-- Modal Header -->
			<div class="modal-header">
				<h4 class="modal-title">@_Titulo</h4>
				<button type="button" class="btn-close" data-bs-dismiss="modal"></button>
			</div>

			<!-- Modal body -->
			<div class="modal-body d-flex justify-content-center">
				<div class="modal-dialog">
					<div class="modal-content" style="border:none;">
						<div class="row">
							<div class="input-group mb-3 input-group-sm">
								<span class="input-group-text" style="width:100px;">Grupo</span>
								<input type="text" class="form-control" @bind=plan_Cuentas.Codigo placeholder="Ingrese codigo de grupo ej: 01.01.02.03" />
							</div>
							<div class="input-group mb-3 input-group-sm">
								<span class="input-group-text" style="width:100px;">Nuemero</span>
								<input type="text" class="form-control" @bind=plan_Cuentas.Numero placeholder="Ingrese numero de cuenta" />
							</div>
							<div class="input-group mb-3 input-group-sm">
								<span class="input-group-text" style="width:100px;">Nombre</span>
								<input type="text" class="form-control" @bind=plan_Cuentas.Nombre placeholder="Ingrese nombre de cuenta" />
							</div>
							<div class="input-group mb-3 input-group-sm">
								<div class="form-check form-switch">
									<label class="form-check-label" for="flexSwitchCheckChecked">Es Imputable</label>
									<input type="checkbox" class="form-check-input" @bind=plan_Cuentas.IsImputable />
								</div>
							</div>
							<div class="input-group mb-3 input-group-sm">
								<div class="form-check form-switch">
									<label class="form-check-label" for="flexSwitchCheckChecked">Es de resultado</label>
									<input type="checkbox" class="form-check-input" @bind=plan_Cuentas.IsResultado />
								</div>
							</div>							
						</div>
					</div>
				</div>
			</div>

			<!-- Modal footer -->
			<div class="modal-footer">
				<div class="input-group mb-3 input-group-sm d-flex justify-content-end">
					<button class="btn btn-success" @onclick="() => Save()" data-bs-dismiss="modal">
						<i class="bi bi-floppy"> Guardar</i>
					</button>
					<button class="btn btn-dark" @onclick="CerrarModal" data-bs-dismiss="modal">
						<i class="bi bi-x-square"> Cerrar</i>
					</button>
				</div>				
			</div>

		</div>
	</div>
</div>




<div style="overflow-x:auto; height: 75vh;">
	<table class="table">
		<thead style=" position: sticky; top: 0; z-index: 1;">
			<tr>
				<th>Grupo</th>
				<th>Cuenta</th>
				<th>Es Resultado</th>
				<th>Es Imputable</th>
				<th style="text-align:right;width:200px;">Saldo</th>
				<th style="text-align:right;width:100px;"></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in lPlan)
			{
				string _bold = "";
				if (item.IsResultado ?? false)
				{ _bold = "fw-bold"; }

				<tr class="@_bold">
					<td><span style="color:white">@item.Codigo</span>@item.Codigo </td>
					<td><i><span style="color:white">@item.Codigo</span> @item.Numero - @item.Nombre</i> </td>
					<td>
						<div class="form-check form-switch">
							<input type="checkbox" disabled class="form-check-input" checked="@item.IsResultado" />
						</div>
					</td>
					<td>
						<div class="form-check form-switch">
							<input type="checkbox" disabled class="form-check-input" checked="@item.IsImputable" />
						</div>
					</td>	
					<td style="text-align:right;width:200px;">
						<i> @lLineaAsientos.Where(l=>l.Plan_Cuentas.Codigo.StartsWith(item.Codigo)).Sum(la=> la.Debe - la.Haber).Value.ToString("C")</i>
					</td>
					<td style="text-align:right;width:100px;">
						<i class="bi bi-pencil" @onclick="() => Editar(item)" data-bs-toggle="modal" data-bs-target="#myModal"></i>
						<i class="bi bi-trash3" @onclick="() => Delete(item.Id)"></i>
					</td>
				</tr>
			}
		</tbody>
	</table>
</div>

@code {
	private string _Titulo = "";
	private bool Mostrar = false;
	Plan_Cuentas plan_Cuentas = new Plan_Cuentas();
	public List<Plan_Cuentas> lPlan = new List<Plan_Cuentas>();
	public List<LineaAsiento> lLineaAsientos = new List<LineaAsiento>();

	protected override async Task OnInitializedAsync()
	{
		lLineaAsientos = await _context.Lineas_Asiento.ToListAsync();
		Load();
	}

	private void Load()
	{ 
		lPlan = _context.Plan_Cuentas.Include(l=>l.Lineas_Asiento).OrderBy(o=>o.Codigo).ToList();
	}

	private async Task Crear()
	{
		_Titulo = "Nueva Cuenta";
		Mostrar = true;
		plan_Cuentas = new Plan_Cuentas();		
	}

	private async Task Editar(Plan_Cuentas entity)
	{
		plan_Cuentas = entity;
		_Titulo = $"Editar - Cuenta {plan_Cuentas.Nombre}";
		Mostrar = false;
	}

	private async Task Save()
	{
		if (plan_Cuentas.Id > 0)
		{
			_context.Plan_Cuentas.Update(plan_Cuentas);
			_context.SaveChanges();
		}
		else
		{
			_context.Plan_Cuentas.Add(plan_Cuentas);
			_context.SaveChanges();
		}

		CerrarModal();

		plan_Cuentas = new Plan_Cuentas();
		Load();
	}	

	private async Task Delete(int id)
	{
		plan_Cuentas = _context.Plan_Cuentas.Find(id);
		if (plan_Cuentas != null)
		{
			_context.Plan_Cuentas.Remove(plan_Cuentas);
			_context.SaveChanges();
			Load();
		}
	}

	private void CerrarModal()
	{
		Mostrar = false;
	}
}